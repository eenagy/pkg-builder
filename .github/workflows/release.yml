name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Extract directories
        id: extract_dirs
        run: |
          TAG_NAME=$(echo ${{ github.ref }} | sed 's/refs\/tags\///'
          # Extract the second and third directories from the tag name
          CODENAME=$(echo $TAG_NAME | cut -d'/' -f2)
          # ARCH=$(echo $TAG_NAME | cut -d'/' -f3)
          echo "::set-output name=codename::$CODENAME"
          # echo "::set-output name=arch::$ARCH"  

      - name: Sbuild setup
        run: |
          sudo apt-get update
          # Note this is an older version of sbuild, no need to patch it, yet
          sudo apt install -y debhelper schroot ubuntu-dev-tools piuparts autopkgtest vmdb2 qemu-system-x86
          sudo apt-get install -y pkg-config libssl-dev uidmap
          sudo apt-get install -y libfilesys-df-perl libmime-lite-perl
          # change this into actually built version and cache it
          wget https://github.com/eth-pkg/sbuild-ubuntu/releases/download/0.85-6-1/sbuild_0.85.6_all.deb
          wget https://github.com/eth-pkg/sbuild-ubuntu/releases/download/0.85-6-1/libsbuild-perl_0.85.6_all.deb
          sudo dpkg -i sbuild_0.85.6_all.deb libsbuild-perl_0.85.6_all.deb || true

      - name: Build
        run: |
          cargo build --verbose

      - name: Install
        run: |
          cargo build --release
          mkdir -p ${HOME}/.local/bin
          mv target/release/pkg-builder ${HOME}/.local/bin
          chmod +x ${HOME}/.local/bin/pkg-builder
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install debcrafter
        run: |
          wget -q https://github.com/eth-pkg/pkg-builder/releases/download/v0.1/debcrafter
          mkdir -p ${HOME}/.local/bin
          mv debcrafter ${HOME}/.local/bin
          chmod +x ${HOME}/.local/bin/debcrafter
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Create chroot env
        run: |
          cd ${{ needs.extract_dirs.outputs.tag_name }}
          sudo ln -s /usr/share/debootstrap/scripts/gutsy /usr/share/debootstrap/scripts/noble
          pkg-builder env create
          echo "${HOME}/.cache/sbuild/${{ needs.extract_dirs.outputs.codename }}-amd64.tar.gz" >> $GITHUB_PATH

      - name: package
        run: |
          cd ${{ needs.extract_dirs.outputs.tag_name }}
          pkg-builder package --run-piuparts false --run-autopkgtest false --run-lintian false


      - name: piuparts
        run: |
          # installing debian-archive-keyring fails on ubuntu LTS, not sure why, but it says it is already installed
          # sudo apt-get install -y debian-archive-keyring
          cd ${{ needs.extract_dirs.outputs.tag_name }}
          ${HOME}/.local/bin/pkg-builder piuparts

      - name: autopkgtest
        run: |
          sudo cp -R ${HOME}/.pkg-builder /root
          apt list --installed autopkgtest
          cd ${{ needs.extract_dirs.outputs.tag_name }}
          sudo ${HOME}/.local/bin/pkg-builder autopkgtest

      - name: verify
        run: |
          cd ${{ needs.extract_dirs.outputs.tag_name }}
          ${HOME}/.local/bin/pkg-builder verify  --no-package true

    # Add any build steps here

  create_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  upload_assets:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Upload Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./path/to/artifact
          asset_name: artifact.zip
          asset_content_type: application/zip
